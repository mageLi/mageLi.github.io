{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/assets/left-arrow.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header-project.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project-pagination.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/project-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/project.tsx"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","LeftArrow","width","height","fill","xmlns","fillRule","clipRule","d","HeaderProject","title","areas","description","date","name","useEmiliaConfig","avatar","titleProps","useSpring","config","slow","from","opacity","transform","to","backButtonProps","infoProps","delay","as","variant","sx","textAlign","my","zIndex","div","style","aria-label","display","alignItems","color","textDecoration","svg","transition","overflow","borderRadius","boxShadow","mx","file","childImageSharp","fixed","fontWeight","mt","mb","p","map","area","index","Fragment","maxWidth","ProjectPagination","prev","next","gridTemplateColumns","letterSpacing","textTransform","fontSize","backgroundColor","gridGap","a","position","top","left","right","bottom","paddingBottom","item","Project","data","project","images","pageContext","imageFade","excerpt","pathname","slug","image","cover","resize","src","body","nodes","fluid","alt","ProjectComponent","query"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-project-query-tsx-8573e6cd9b2f01ff681b.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\"\n\nconst LeftArrow = () => (\n  <svg width=\"20\" height=\"18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7.832 17.642L.345 9.864a1.256 1.256 0 0 1 0-1.728L7.832.358a1.146 1.146 0 0 1 1.663 0c.46.477.46 1.251 0 1.728L4.017 7.778H20v2.444H4.017l5.478 5.692c.46.477.46 1.25 0 1.728a1.146 1.146 0 0 1-1.663 0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default LeftArrow\n","/** @jsx jsx */\nimport React from \"react\"\nimport { Flex, jsx, Container, Heading, Styled } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Img from \"gatsby-image\"\nimport HeaderBackground from \"./header-background\"\nimport LeftArrow from \"../assets/left-arrow\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport { ChildImageSharpFixed } from \"../types\"\n\ntype HeaderProjectProps = {\n  title: string\n  areas: string[]\n  description?: string\n  date: string\n}\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: ChildImageSharpFixed\n  }\n}\n\nconst HeaderProject = ({ title, areas, description, date }: HeaderProjectProps) => {\n  const { name } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          fixed(width: 40, height: 40, quality: 100) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const backButtonProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(-30px, 0, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.header\">\n      <HeaderBackground />\n      <Container sx={{ textAlign: `center`, my: 4, zIndex: 10 }}>\n        <animated.div style={backButtonProps}>\n          <Link\n            to=\"/\"\n            aria-label={`${name} - Back to homepage`}\n            sx={{\n              display: `flex`,\n              alignItems: `center`,\n              color: `text`,\n              textDecoration: `none`,\n              svg: {\n                transition: `transform 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955)`,\n              },\n              \"&:hover, &:focus\": { svg: { transform: `translateX(-6px)` } },\n            }}\n          >\n            <LeftArrow />\n            <div\n              sx={{\n                overflow: `hidden`,\n                borderRadius: `full`,\n                width: `40px`,\n                height: `40px`,\n                display: `inline-block`,\n                boxShadow: `md`,\n                mx: 2,\n              }}\n            >\n              {avatar?.file?.childImageSharp?.fixed && <Img fixed={avatar.file.childImageSharp.fixed} />}\n            </div>\n            <span sx={{ fontWeight: `medium` }}>{name}</span>\n          </Link>\n        </animated.div>\n        <div sx={{ mt: 4, mb: [6, 6, 7] }}>\n          <animated.div style={titleProps}>\n            <Heading as=\"h1\" variant=\"styles.h1\">\n              {title}\n            </Heading>\n          </animated.div>\n          <animated.div style={infoProps}>\n            <Styled.p sx={{ mb: 0, mt: 4 }}>{date}</Styled.p>\n            <div>\n              {areas.map((area, index) => (\n                <React.Fragment key={area}>\n                  {index > 0 && `, `}\n                  {area}\n                </React.Fragment>\n              ))}\n            </div>\n            {description && (\n              <div sx={{ maxWidth: `900px`, mx: `auto`, mt: 5, p: { textAlign: `left` } }}>\n                <MDXRenderer>{description}</MDXRenderer>\n              </div>\n            )}\n          </animated.div>\n        </div>\n      </Container>\n    </Flex>\n  )\n}\n\nexport default HeaderProject\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Card from \"./card\"\nimport { ChildImageSharpFluid } from \"../types\"\n\ntype ProjectPaginationProps = {\n  prev: {\n    slug: string\n    parent: {\n      fileAbsolutePath: string\n    }\n    title: string\n    cover: {\n      childImageSharp: ChildImageSharpFluid\n    }\n  }\n  next: {\n    slug: string\n    parent: {\n      fileAbsolutePath: string\n    }\n    title: string\n    cover: {\n      childImageSharp: ChildImageSharpFluid\n    }\n  }\n}\n\nconst ProjectPagination = ({ prev, next }: ProjectPaginationProps) => (\n  <div sx={{ mt: 6, mb: 4 }}>\n    <div sx={{ display: `grid`, gridTemplateColumns: `250px 1fr`, alignItems: `center`, mb: 4 }}>\n      <h2\n        sx={{\n          color: `textMuted`,\n          fontWeight: `medium`,\n          letterSpacing: `widest`,\n          textTransform: `uppercase`,\n          fontSize: 1,\n          my: 0,\n        }}\n      >\n        More Projects\n      </h2>\n      <div sx={{ width: `100%`, height: `2px`, backgroundColor: `muted` }} />\n    </div>\n    <div\n      sx={{\n        display: `grid`,\n        gridTemplateColumns: [`1fr`, `1fr`, `1fr 1fr`],\n        gridGap: [4, 4, 5],\n        a: { position: `relative` },\n        \"[data-name='card-overlay']\": {\n          position: `absolute`,\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        },\n        \".gatsby-image-wrapper > div\": {\n          paddingBottom: `56% !important`,\n        },\n      }}\n    >\n      {prev && <Card item={prev} />}\n      {next && <Card item={next} />}\n    </div>\n  </div>\n)\n\nexport default ProjectPagination\n","/** @jsx jsx */\nimport { jsx, Container } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport Img from \"gatsby-image\"\nimport { ChildImageSharpFluid } from \"../types\"\nimport Layout from \"./layout\"\nimport HeaderProject from \"./header-project\"\nimport ProjectPagination from \"./project-pagination\"\nimport SEO from \"./seo\"\n\ntype ProjectProps = {\n  data: {\n    project: {\n      body: string\n      excerpt: string\n      date: string\n      slug: string\n      title: string\n      areas: string[]\n      cover: {\n        childImageSharp: {\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n    images: {\n      nodes: {\n        name: string\n        childImageSharp: ChildImageSharpFluid\n      }[]\n    }\n  }\n  pageContext: {\n    prev: {\n      slug: string\n      parent: {\n        fileAbsolutePath: string\n      }\n      title: string\n      cover: {\n        childImageSharp: ChildImageSharpFluid\n      }\n    }\n    next: {\n      slug: string\n      parent: {\n        fileAbsolutePath: string\n      }\n      title: string\n      cover: {\n        childImageSharp: ChildImageSharpFluid\n      }\n    }\n  }\n}\n\nconst Project = ({ data: { project, images }, pageContext: { prev, next } }: ProjectProps) => {\n  const imageFade = useSpring({ config: config.slow, delay: 800, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <SEO\n        title={project.title}\n        description={project.excerpt}\n        pathname={project.slug}\n        image={project.cover.childImageSharp.resize.src}\n      />\n      <HeaderProject title={project.title} description={project.body} areas={project.areas} date={project.date} />\n      <Container sx={{ mt: [`-6rem`, `-6rem`, `-8rem`] }}>\n        {images.nodes.map((image) => (\n          <animated.div key={image.name} style={imageFade}>\n            <Img fluid={image.childImageSharp.fluid} alt={image.name} sx={{ mb: [4, 4, 5], boxShadow: `xl` }} />\n          </animated.div>\n        ))}\n        <ProjectPagination prev={prev} next={next} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Project\n","import { graphql } from \"gatsby\"\nimport ProjectComponent from \"../components/project\"\n\nexport default ProjectComponent\n\nexport const query = graphql`\n  query($slug: String!, $absolutePathRegex: String!, $formatString: String!) {\n    images: allFile(\n      filter: {\n        absolutePath: { regex: $absolutePathRegex }\n        extension: { regex: \"/(jpg)|(png)|(tif)|(tiff)|(webp)|(jpeg)/\" }\n      }\n      sort: { fields: name, order: ASC }\n    ) {\n      nodes {\n        name\n        childImageSharp {\n          fluid(maxWidth: 1600, quality: 90) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n    project(slug: { eq: $slug }) {\n      body\n      excerpt\n      date(formatString: $formatString)\n      slug\n      title\n      areas\n      cover {\n        childImageSharp {\n          resize(width: 800, quality: 90) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Project from \"../../../components/project\"\n\ntype Props = {\n  data: {\n    project: any\n    images: any\n    [key: string]: any\n  }\n  pageContext: {\n    prev: any\n    next: any\n  }\n}\n\nexport default function EmiliaCoreProject({ data, pageContext }: Props) {\n  const { project, images } = data\n\n  return <Project data={{ ...data, project, images }} pageContext={pageContext} />\n}\n"],"sourceRoot":""}